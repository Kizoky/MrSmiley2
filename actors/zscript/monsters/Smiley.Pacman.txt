//===========================================================================
//
// Lost Soul
//
//===========================================================================
class Pacc : SmileyActor
{
	Default
	{
		Health 100;
		Radius 16;
		Height 56;
		Mass 50;
		Speed 8;
		Damage 3;
		PainChance 256;
		Monster;
		+FLOAT +NOGRAVITY +MISSILEMORE +DONTFALL +NOICEDEATH +ZDOOMTRANS;
		AttackSound "skull/melee";
		PainSound "skull/pain";
		DeathSound "skull/death";
		ActiveSound "skull/active";
		RenderStyle "SoulTrans";
		Obituary "$OB_SKULL";
	}
	States
	{
	Spawn:
		SKUL AB 10 BRIGHT A_Look;
		Loop;
	See:
		SKUL AB 6 BRIGHT A_Chase;
		Loop;
	Missile:
		SKUL C 10 BRIGHT A_FaceTarget;
		SKUL D 4 BRIGHT A_PaccAttack;
		SKUL CD 4 BRIGHT;
		Goto Missile+2;
	Pain:
		SKUL E 3 BRIGHT;
		SKUL E 3 BRIGHT A_Pain;
		Goto See;
	Death:
		TNT1 A 0 A_Mirrorize();
		SKUL F 6 BRIGHT;
		SKUL G 6 BRIGHT A_Scream;
		SKUL H 6 BRIGHT;
		SKUL I 6 BRIGHT A_NoBlocking;
		SKUL J 6;
		SKUL K 6;
		Stop;
	}
}

extend class Pacc
{
    void A_Wakka()
	{
		int AttORSpit = random(0,1); //do random number between 0 or 1
		if (AttORSpit == 0)
		{
			A_PaccAttack();
		}
		else
		{
			if (AttORSpit == 1)
			{
				A_PaccAttack2();
			}
		}
	}
		const DEFSKULLSPEED = 20;
	
	void A_PaccAttack2(double skullspeed = DEFSKULLSPEED)
	{
		int AttORSpit = random(0,1);
		
		if (target == null) return;

		if (skullspeed <= 0) skullspeed = DEFSKULLSPEED;
		
		if (AttORSpit == 0)
		{
			bSkullfly = true;
			A_PlaySound(AttackSound, CHAN_VOICE);
			A_FaceTarget();
		}
		else
		{
			if (AttORSpit == 1)
			{
				A_EyeAttack();
			}
		}
		VelFromAngle(skullspeed);
		Vel.Z = (target.pos.Z + target.Height/2 - pos.Z) / DistanceBySpeed(target, skullspeed);
	}
	
}