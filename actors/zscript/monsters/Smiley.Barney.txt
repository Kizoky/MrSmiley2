//===========================================================================
//
// Pink Demon // Barney | Hugaholic
//
//===========================================================================
class Hugaholic : SmileyActor
{
	bool Transformed, canTransform;
	
	override void PostBeginPlay()
	{
		Super.PostBeginPlay();
		
		int chance = random(1,2);
		
		if (chance == 2)
			canTransform = true;
	
	}
	
	Default
	{
		Health 150;
		PainChance 180;
		Speed 10;
		Radius 30;
		Height 56;
		Mass 400;
		Monster;
		+FLOORCLIP
		SeeSound "demon/sight";
		AttackSound "demon/melee";
		PainSound "demon/pain";
		DeathSound "demon/death";
		ActiveSound "demon/active";
		Obituary "$OB_DEMONHIT";
	}
	States
	{
	Spawn:
		SARG AB 10 A_Look;
		Loop;
	See:
		TNT1 A 0 A_PrepareYourself();
		SARG AABBCCDD 2 Fast A_Chase;
		Loop;
	Melee:
		SARG EF 8 Fast A_FaceTarget;
		SARG G 8 Fast A_RapeAttack;
		Goto See;
	Pain:
		SARG H 2 Fast;
		SARG H 2 Fast A_Pain;
		Goto See;
	Death:
		TNT1 A 0 A_Mirrorize();
		SARG I 8;
		SARG J 8 A_Scream;
		SARG K 4;
		SARG L 4 A_NoBlocking;
		SARG M 4;
		SARG N -1;
		Stop;
	Raise:
		TNT1 A 0 A_Metalization();
		SARG N 5;
		SARG MLKJI 5;
		TNT1 A 0 A_UnMirrorize();
		Goto See;
	}
}

//===========================================================================
//
// Spectre // Rape version of Barney
//
//===========================================================================
class Rapeaholic : Hugaholic replaces Spectre
{
	Default
	{
		+SHADOW
		RenderStyle "OptFuzzy";
		Alpha 0.5;
		SeeSound "spectre/sight";
		AttackSound "spectre/melee";
		PainSound "spectre/pain";
		DeathSound "spectre/death";
		ActiveSound "spectre/active";
		HitObituary "$OB_SPECTREHIT";
	}
}

extend class Hugaholic
{
	action void A_PrepareYourself()
	{
	
		if (invoker.canTransform == true)
		{
				if (invoker.Transformed != true)
				{
					if (self.Health < 120)
					{
						if (self.Speed != 20)
						{
							//A_printbold("Transformed");
							A_PlaySound("barney/transform");
							self.Speed = 20;
							self.Radius == 50;
							self.Height = 67;
							self.Scale.X = 1.3;
							self.Scale.Y = self.Scale.X;
							self.Health =+ 125;
							invoker.Transformed = true;
						}
					}
				}
		}
	}


}