class MrSmiley : SmileyPlayer
{
	Default
	{
		Species "Marines";
		Player.DisplayName "Mr. Smiley Head";
		Player.StartItem "SmileyPistol";
		Player.StartItem "SmileyBat";
		Player.StartItem "SmileyClip", 75;
		Player.StartItem "SmileyShell", 20;
		Player.WeaponSlot 1, "SmileyBat", "Toothbrush";
		Player.WeaponSlot 2, "SmileyPistol";
		Player.WeaponSlot 3, "SmileyShotgun", "SmileySuperShotgun";
		Player.WeaponSlot 4, "SmileyChaingun";
		Player.WeaponSlot 5, "SmileyChickenLauncher";
		Player.WeaponSlot 6, "PlasmaRing";
		Player.WeaponSlot 7, "SmileyGoodFetherBird";
	}
}

class SmileyWeapon : Weapon { }

//Check if the Player is playing as Uncle Smiley
//This will mirror the weapon sprites, and it will save us some mbs!

//2019: There's now a lot easier way to do this, but I don't want to redo this from scratch
extend class SmileyWeapon
{
	action void A_CheckUncle()
	{
		if (self is 'UncleSmiley')
		{
			A_OverlayFlags (1,PSPF_MIRROR,true);
			A_OverlayFlags (1,PSPF_FLIP,true);
			A_OverlayFlags (PSP_FLASH,PSPF_MIRROR,true);
			A_OverlayFlags (PSP_FLASH,PSPF_FLIP,true);
		}
	}
	
	action void A_CheckHead()
	{
		if (self is 'MrSmiley')
		{
			A_OverlayFlags (1,PSPF_MIRROR,true);
			A_OverlayFlags (1,PSPF_FLIP,true);
			A_OverlayFlags (PSP_FLASH,PSPF_MIRROR,true);
			A_OverlayFlags (PSP_FLASH,PSPF_FLIP,true);
		}
	}
}

class SmileySuperShotgun : SmileyWeapon
{
	Default
	{
	Weapon.Kickback 100;
	Weapon.SelectionOrder 400;
	Weapon.AmmoUse 2;
	Weapon.AmmoGive 8;
	Weapon.AmmoType "SmileyShell";
	Inventory.PickupMessage "$GOTSHOTGUN2";
	Obituary "$OB_MPSSHOTGUN";
	Tag "$TAG_SUPERSHOTGUN";
	Weapon.BobRangeX -0.6;
	Weapon.BobRangeY 0.4;
	Weapon.BobSpeed 1.5;
	Weapon.BobStyle "InverseSmooth";
	}
  States
  {
  Ready:
	TNT1 A 0 A_CheckHead();
    XYID ABCDE 11 A_WeaponReady;
    Loop;
  Deselect:
	TNT1 A 0 A_CheckHead();
    SHT2 A 1 A_Lower;
    Loop;
  Select:
	TNT1 A 0 A_CheckHead();
    SHT2 A 1 A_Raise;
    Loop;
  Fire:
	TNT1 A 0 A_CheckHead();
    SHT2 A 3;
    KIST A 5 A_FireShotgun2;
	KIST B 1;
    SHT2 B 4 A_CheckReload;
    SHT2 C 5 A_OpenShotgun2;
    KIZO ABC 5;
    KIZO D 2 A_LoadShotgun2;
    KIZO EFG 4;
    KIZO H 2 A_CloseShotgun2;
    SHT2 EDCB 2;
	SHT2 B 4 A_ReFire;
    Goto Ready;
  Spawn:
    SGN2 A -1;
    Stop;
  }
}

class SmileyBat : SmileyWeapon
{
	Default
	{
	Weapon.SelectionOrder 3700;
	Weapon.Kickback 100;
	Obituary "$OB_MPFIST";
	Tag "$TAG_FIST";
	+WEAPON.WIMPY_WEAPON;
	+WEAPON.MELEEWEAPON;
	Weapon.BobRangeX 0.88;
	Weapon.BobRangeY 0.32;
	Weapon.BobSpeed 1.6;
	Weapon.BobStyle "InverseSmooth";
	}
	States
	{
	Ready:
		TNT1 A 0 A_CheckUncle();
		TNT1 A 0 A_Jump(256,"Idle","Idle2","Idle3");
		PUFI BCDEEEDCB 13 A_WeaponReady;
		Loop;
	Idle:
		TNT1 A 0 A_CheckUncle();
		PUFI BBCCBB 6 A_WeaponReady;
		Goto Ready;
	Idle2:
		TNT1 A 0 A_CheckUncle();
		PUFI BCDDEEDDEEDC 8 A_WeaponReady;
		Goto Ready;
	Idle3:
		TNT1 A 0 A_CheckUncle();
		PUFI BCDEEEDCB 13 A_WeaponReady;
		Goto Ready;
	Deselect:
		TNT1 A 0 A_CheckUncle();
		PUFI A 1 A_Lower;
		Loop;
	Select:
		TNT1 A 0 A_CheckUncle();
		PUFI A 1 A_Raise;
		Loop;
	AltFire:
		TNT1 A 0 A_CheckUncle();
		TNT1 A 0 A_SetReflectiveInvulnerable;
		PUNG BCDEFGH 1;		
		PUNG F 3 A_Punch;
		PUNG E 1;
		TNT1 A 0 A_UnSetReflectiveInvulnerable;
		PUNG D 1;
		PUNG CB 5;
		Goto Ready;
	Fire:
		TNT1 A 0 A_CheckUncle();
		PUNG BCDEFGH 1;		
		PUNG F 3 A_Punch;
		PUNG ED 2;
		PUNG CB 3 A_ReFire;
		Goto Ready;
	}
}

class SmileyShotgun : SmileyWeapon
{
	Default
	{
		Weapon.Kickback 100;
		Weapon.SelectionOrder 1300;
		Weapon.AmmoUse 1;
		Weapon.AmmoGive 8;
		Weapon.AmmoType "SmileyShell";
		Obituary "$OB_MPSHOTGUN";
		Tag "$TAG_SHOTGUN";
		Inventory.PickupMessage "$GOTSHOTGUN";
		Weapon.BobRangeX -0.98;
		Weapon.BobRangeY 0.4;
		Weapon.BobSpeed 1.6;
		Weapon.BobStyle "InverseSmooth";
	}
	States
	{
	Ready:
		TNT1 A 0 A_CheckUncle();
		SHID ABCDCB 9 A_WeaponReady;
		Loop;
	Deselect:
		TNT1 A 0 A_CheckUncle();
		SHTG A 1 Offset(0,0) A_Lower;
		Loop;
	Select:
		TNT1 A 0 A_CheckUncle();
		SHTG A 1 Offset(0,0) A_Raise;
		Loop;
	Fire:
		SHTG A 3;
		SHTG A 5 A_FireShotgun;
		SHTG B 2 Offset(-8, 64);
		SHTG B 2 Offset(-21, 54);
		SHTG B 1 Offset(-40, 41);
		SHTG D 2 Offset(-45, 36);
		SHTG D 1 Offset(-63, 25);
		SHTG E 1 Offset(-80, 27);
		SHTG F 2 Offset(-72, 14);
		SHTG G 1 Offset(-87, 31);
		SHTG G 1 Offset(-82, 56);
		SHTG H 1 Offset(-77, 64);
		SHTG H 1 Offset(-66, 106);
		SHTG G 1 Offset(-71, 25);
		SHTG G 2 Offset(-58, 12);
		SHTG F 1 Offset(-34, 33);
		SHTG E 2 Offset(-40, 43);
		SHTG E 1 Offset(-24, 54);
		SHTG E 2 Offset(-7, 63);
		SHTG D 1 Offset(4, 61);
		SHTG B 2 Offset(5, 62);
		SHTG A 1 Offset(0, 32);
			
		//TNT1 A 0 A_CheckUncle();
		//SHTG A 3;
		//SHTG A 5 A_FireShotgun;
		//SHTG B 2;
		//SHTG C 1;
		//SHTG D 2;
		//SHTG E 3;
		//SHTG F 4;
		//SHTG G 1;
		//SHTG H 3;
		//SHTG GFEDCB 2;
		//SHTG A 7 A_ReFire;
		Goto Ready;
	Flash:
		TNT1 A 0 A_CheckUncle();
		SHTF B 3 Offset(0, 0) Bright A_Light2;
		SHTF A 2 Offset(0, 0) Bright A_Light1;
		Goto LightDone;
	Spawn:
		SHOT A -1;
		Stop;
	}
}

class SmileyChaingun : SmileyWeapon
{
	Default
	{
	Weapon.Kickback 100;
	Decal "bulletchip";
	Weapon.SelectionOrder 700;
    Weapon.AmmoUse 1;
    Weapon.AmmoGive 20;
    Weapon.AmmoType "SmileyClip";
	Inventory.PickupMessage "$GOTCHAINGUN";
	Obituary "$OB_MPCHAINGUN";
	Tag "$TAG_CHAINGUN";
	Weapon.BobRangeX 1.2;
	Weapon.BobRangeY 0.6;
	Weapon.BobSpeed 1.6;
	Weapon.BobStyle "InverseSmooth";
	}
	States
	{
	Ready:
		TNT1 A 0 A_CheckUncle();
		CHIG ABCD 12 A_WeaponReady;
		Loop;
   Deselect:
		TNT1 A 0 A_CheckUncle();
		CHGG A 1 A_Lower;
		Loop;
   Select:
		TNT1 A 0 A_CheckUncle();
		CHGG A 1 A_Raise;
		Loop;
	Fire:
		TNT1 A 0 A_CheckUncle();
		CHGG A 1 A_FireCGun;
		CHGG BCD 1;
		CHGG A 1 A_FireCGun;
		CHGG BCD 1;
		CHGG B 0 A_ReFire;
		CHGG A 1 A_Weaponready;
		CHGG BB 1 A_Weaponready;
		CHGG CCC 1 A_Weaponready;
		CHGG DDD 1 A_Weaponready;
		Goto Ready;
	Flash:
		TNT1 A 0 A_CheckUncle();
		TNT1 A 0;
		TNT1 A 0 A_Jump(128,4);
		CHGF A 1 Bright A_Light1;
		CHGF B 1 Bright A_Light2;
		TNT1 A 2 A_Light1;
		Goto LightDone;
		CHGF CE 1 Bright A_Light1;
		CHGF DF 1 Bright A_Light2;
		TNT1 A 2 A_Light1;
		Goto LightDone;
	Spawn:
		MGUN A -1;
		Stop;
	}
}

class SmileyPistol : SmileyWeapon
{
	Default
	{
	Weapon.Kickback 100;
	Decal "bulletchip";
	Weapon.SelectionOrder 1900;
	Weapon.AmmoUse 1;
	Weapon.AmmoGive 20;
	Weapon.AmmoType "SmileyClip";
	Obituary "$OB_MPPISTOL";
	+WEAPON.WIMPY_WEAPON;
	Tag "$TAG_PISTOL";
	Inventory.PickupMessage "Ya got the..Pistol?";
	Weapon.BobRangeX 0.2;
	Weapon.BobRangeY -0.8;
	Weapon.BobSpeed 1.4;
	Weapon.BobStyle "InverseSmooth";
	}
	States
	{
	Ready:
		TNT1 A 0 A_CheckUncle();
		PIRE ABCBBCBCBBCCBCBBABCABACABACABA 8 A_WeaponReady;
		Loop;
	Deselect:
		TNT1 A 0 A_CheckUncle();
		PISG A 1 A_Lower;
		Loop;
	Select:
		TNT1 A 0 A_CheckUncle();
		PISG A 1 A_Raise;
		Loop;
	Fire:
		TNT1 A 0 A_CheckUncle();
		PISG A 4;
		PISG B 2 A_FirePistol;
		PISG CEDB 2;
		PISG A 5 A_ReFire;
		Goto Ready;
	Flash:	
		TNT1 A 0;
		TNT1 A 0 Bright A_Light2;
		PISF A 2 Bright A_CheckUncle();
		Goto LightDone;
	Spawn:
		PIST A -1;
		Stop;
	}
}

class SmileyChickenLauncher : SmileyWeapon
{
	Default
	{
	Weapon.Kickback 100;
	Weapon.SelectionOrder 2500;
	Weapon.AmmoUse 1;
	Weapon.AmmoGive 2;
	Weapon.AmmoType "ChickenAmmo";
	+WEAPON.NOAUTOFIRE;
	Inventory.PickupMessage "$GOTLAUNCHER";
	Tag "$TAG_ROCKETLAUNCHER";
	Weapon.BobRangeX 0.11;
	Weapon.BobRangeY 0.3;
	Weapon.BobSpeed 1.3;
	Weapon.BobStyle "InverseSmooth";
	}
	States
	{
	Ready: //Well, whatever, this doesn't work.
		TNT1 A 0 A_CheckUncle();
		MIID ABCDCB 9 A_WeaponReady;
		Loop;
	Deselect:
		TNT1 A 0 A_CheckUncle();
		MISG A 1 A_Lower;
		Loop;
	Select:
		TNT1 A 0 A_CheckUncle();
		MISG A 1 A_Raise;
		Loop;
	Fire:
		TNT1 A 0 A_CheckUncle();
		MISG A 2;
		MISG A 4 A_GunFlash;
		MISG B 2;
		MISG C 0;
		MISG C 3 A_FireMissile;
		MISG D 3;
		MISG EF 2;
		MISG C 0;
		MISG FB 1;
		MISG C 0;
		MISG A 0 A_ReFire;
		Goto Ready;
	Flash:
		TNT1 A 0 A_CheckUncle();
		MISF A 2 Bright A_Light1;
		MISF BC 1 Bright;
		MISF CD 1 Bright A_Light2;
		MISF DE 2 Bright;
		Goto LightDone;
	Spawn:
		LAUN A -1;
		Stop;
	}
}

class SmileyGoodFetherBird : SmileyWeapon
{
	Default
	{
	Weapon.Kickback 100;
	Height 20;
	Weapon.SelectionOrder 2800;
	Weapon.AmmoUse 40;
	Weapon.AmmoGive 40;
	Weapon.AmmoType "Ring";
	+WEAPON.NOAUTOFIRE;
	Inventory.PickupMessage "$GOTBFG9000";
	Tag "$TAG_BFG9000";
	Weapon.BobRangeX 1.2;
	Weapon.BobRangeY 0.6;
	Weapon.BobSpeed 1.6;
	Weapon.BobStyle "InverseSmooth";
	}
	States
	{
	Ready:
		TNT1 A 0 A_CheckUncle();
		BFID ABCD 10 A_WeaponReady;
		Loop;
	Deselect:
		TNT1 A 0 A_CheckUncle();
		BFGG A 1 A_Lower;
		Loop;
	Select:
		TNT1 A 0 A_CheckUncle();
		BFGG A 1 A_Raise;
		Loop;
	Fire:
		TNT1 A 0 A_CheckUncle();
		TNT1 A 0 A_BFGSound;
		//BFGG ABCDAB 2
		//BFGG ABCDAB 2 A_GunFlash
		//BFGG EFG 4
		//SHTG A 0 A_Recoil(5)
		//BFGG H 4 A_FireBFG
		//BFGG I 1 A_ReFire
		//BFGG J 4 A_ReFire
		BFGG A 2;
		BFGG A 2 Offset(-10, 7);
		BFGG A 2 Offset(3, 7);
		BFGG A 2 Offset(-11, 16);
		BFGG A 2 Offset(14, 14) A_GunFlash;
		BFGG E 2 Offset(1, 20);
		BFGG E 2 Offset(-14, 16);
		BFGG E 2 Offset(16, 16);
		BFGG E 3 Offset(-12, 10);
		BFGG E 2 Offset(1, 20);
		BFGG E 2 Offset(-14, 16);
		BFGG E 2 Offset(16, 16);
		BFGG E 3 Offset(-12, 10);
		BFGG E 3 Offset(18, 12) A_FireBFG;
		BFGG E 3 Offset(3, 24);
		BFGG E 3 Offset(3, 4) A_ReFire;
		BFGG E 3 Offset(2, 21) A_ReFire;
		goto Ready;
	Hold:
		TNT1 A 0 A_CheckUncle();
		MISG C 0 A_ZoomFactor(1);
		BFGG A 1 A_BFGSound;
		BFGG A 19;
		BFGG B 2 A_GunFlash;
		BFGG A 8;
		SHTG A 0 A_Recoil(5);
		BFGG B 10 A_FireBFG;
		BFGG B 1 A_ReFire;
		BFGG B 19 A_ReFire;
		goto Ready;
	Spawn:
		BFUG A -1;
		Stop;
	}
}

class PlasmaRing : SmileyWeapon
{
	action state A_CheckHold()
	{
		if (!(player.cmd.buttons & BT_ATTACK))
			return ResolveState ("HoldEnd");
		else
			return ResolveState (null);
	}
	
	Default
	{
		Weapon.Kickback 100;
		Weapon.SelectionOrder 100;
		Weapon.AmmoUse 1;
		Weapon.AmmoGive 40;
		Weapon.AmmoType "Ring";
		Inventory.PickupMessage "$GOTPLASMA";
		Tag "$TAG_PLASMARIFLE";
		Weapon.BobRangeX 1.2;
		Weapon.BobRangeY 0.6;
		Weapon.BobSpeed 1.6;
		Weapon.BobStyle "InverseSmooth";
  }
  States
  {
  Ready:
	TNT1 A 0 A_CheckHead();
    PLID ABCDCB 9 A_WeaponReady;
    Loop;
  Deselect:
	TNT1 A 0 A_CheckHead();
    PLID A 1 A_Lower;
    Loop;
  Select:
	TNT1 A 0 A_CheckHead();
    PLID A 1 A_Raise;
    Loop;
  Fire:
	TNT1 A 0 A_CheckHead();
    //PLSF ABAB 3 A_FireCustomMissile("PlasmaBall",0,1);
	//PLSG BA 6 A_ReFire;
	PLSG A 2 Offset(52, 164);
	PLSG B 2 Offset(59, 155);
	PLSG B 2 Offset(45, 148);
	PLSG B 2 Offset(24, 137);
	PLSF A 2 Offset(133, 122);
	PLSF A 2 Offset(123, 115);
	Goto Hold;
  Hold:
	PLSF A 2 Offset(112, 104) { if (!(player.cmd.buttons & BT_ATTACK)) { return ResolveState ("HoldEnd"); } A_FireCustomMissile("PlasmaBall",0,1); return ResolveState (null);}
	PLSF B 2 Offset(111, 103) { if (!(player.cmd.buttons & BT_ATTACK)) { return ResolveState ("HoldEnd"); } A_FireCustomMissile("PlasmaBall",0,1); return ResolveState (null);}
	PLSF A 2 Offset(106, 107) { if (!(player.cmd.buttons & BT_ATTACK)) { return ResolveState ("HoldEnd"); } A_FireCustomMissile("PlasmaBall",0,1); return ResolveState (null);}
	PLSF B 2 Offset(122, 103) { if (!(player.cmd.buttons & BT_ATTACK)) { return ResolveState ("HoldEnd"); } A_FireCustomMissile("PlasmaBall",0,1); return ResolveState (null);}
	PLSF A 2 Offset(107, 110) { if (!(player.cmd.buttons & BT_ATTACK)) { return ResolveState ("HoldEnd"); } A_FireCustomMissile("PlasmaBall",0,1); return ResolveState (null);}
	PLSF B 2 Offset(104, 102) { if (!(player.cmd.buttons & BT_ATTACK)) { return ResolveState ("HoldEnd"); } A_FireCustomMissile("PlasmaBall",0,1); return ResolveState (null);}
	PLSF A 2 Offset(108, 108) { if (!(player.cmd.buttons & BT_ATTACK)) { return ResolveState ("HoldEnd"); } A_FireCustomMissile("PlasmaBall",0,1); return ResolveState (null);}
	PLSF B 2 Offset(112, 101) { if (!(player.cmd.buttons & BT_ATTACK)) { return ResolveState ("HoldEnd"); } A_FireCustomMissile("PlasmaBall",0,1); return ResolveState (null);}
	PLSF A 2 Offset(102, 108) { if (!(player.cmd.buttons & BT_ATTACK)) { return ResolveState ("HoldEnd"); } A_FireCustomMissile("PlasmaBall",0,1); return ResolveState (null);}
	PLSF B 2 Offset(116, 102) { if (!(player.cmd.buttons & BT_ATTACK)) { return ResolveState ("HoldEnd"); } A_FireCustomMissile("PlasmaBall",0,1); return ResolveState (null);}
	Goto Hold;
  HoldEnd:
	TNT1 A 0 { Console.Printf("Hold end"); }
	PLSF A 2 Offset(104, 109);
	PLSF A 2 Offset(107, 108);
	PLSF A 2 Offset(111, 118);
	PLSF A 1 Offset(120, 119);
	PLSF A 1 Offset(132, 124);
	PLSF A 1 Offset(147, 127);
	PLSG B 1 Offset(37, 140);
	PLSG B 1 Offset(52, 153);
	PLSG B 1 Offset(63, 161);
    Goto Ready;
  Spawn:
    PLAS A -1;
    Stop;
  }
}

class Toothbrush : SmileyWeapon
{
	Default
	{
	Weapon.Kickback 0;
	Weapon.SelectionOrder 2200;
	Weapon.UpSound "weapons/sawup";
	Weapon.ReadySound "weapons/sawidle";
	Inventory.PickupMessage "$GOTCHAINSAW";
	Obituary "$OB_MPCHAINSAW";
	Tag "$TAG_CHAINSAW";
	+WEAPON.MELEEWEAPON;
  }
  States
  {
  Ready:
	TNT1 A 0 A_CheckUncle();
    SAWG CD 4 A_WeaponReady;
    Loop;
  Deselect:
	TNT1 A 0 A_CheckUncle();
    SAWG C 1 A_Lower;
    Loop;
  Select:
	TNT1 A 0 A_CheckUncle();
    SAWG C 1 A_Raise;
    Loop;
  Fire:
	TNT1 A 0 A_CheckUncle();
    SAWG AB 4 A_Saw;
    SAWG B 0 A_ReFire;
    Goto Ready;
  Spawn:
    CSAW A -1;
    Stop;
  }
}