class Emoley : SmileyPlayer
{
	Default
	{
	Species "Marines";
	Player.DisplayName "Emoley";
	Player.Face "EMO";
	Player.Soundclass "Emoleyy";
	Player.StartItem "Smileapocal";
	Player.StartItem "EmoleyShotgun";
	Player.StartItem "SmileyBat";
	Player.StartItem "EmoleyMana", 100;
	//Player.StartItem "Shell", 20;
	Player.WeaponSlot 1, "SmileyBat", "Toothbrush";
	Player.WeaponSlot 2, "Smileapocal", "Emostaff";
	Player.WeaponSlot 3, "EmoleyShotgun", "SmileySuperShotgun";
	Player.WeaponSlot 4, "SmileyChaingun";
	Player.WeaponSlot 5, "SmileyChickenLauncher";
	Player.WeaponSlot 6, "PlasmaRing";
	Player.WeaponSlot 7, "SmileyGoodFetherBird";
	}
}

class EmoleyMana : Ammo
{
	Default
	{
		Inventory.PickupMessage "Picked up a mana for Emoley.";
		Inventory.Amount 10;
		Inventory.MaxAmount 500;
		Ammo.BackpackAmount 10;
		Ammo.BackpackMaxAmount 750;
		Inventory.Icon "CLIPA0";
		Tag "$AMMO_CLIP";
	}
	States
	{
	Spawn:
		CLIP A -1;
		Stop;
	}
}

class EmoleyFlame : SmileyActor
{
	Actor Owner;
	bool FlameAdjusted;
	
	override void Tick()
	{
		Super.Tick();
		if (Owner)
		{
			if (Owner is 'MJClone')
				SetOrigin(Owner.pos+(0,0,55), TRUE);
			if ((Owner is 'Safariguy') || (Owner is 'Gangster') || (Owner is 'SmileyAlien'))
				SetOrigin(Owner.pos+(0,0,45), TRUE);
				
			// Let's not forget that Barneys can transform
			if ((Owner is 'Hugaholic') || (Owner is 'Rapeaholic'))
			{
				let p = Hugaholic(Owner);
				
				// Check if they can transform
				if (p.canTransform != true)
					SetOrigin(Owner.pos+(0,0,38), TRUE);
				else
				{
					if (FlameAdjusted != true)
					{
						// Make the flame bigger
						Scale.X = 0.25;
						Scale.Y = Scale.X;
						FlameAdjusted = true;
					}
					SetOrigin(Owner.pos+(0,0,48), TRUE);
				}
			}
			
			if ((Owner is 'RedRanger') || (Owner is 'BlueRanger'))
				SetOrigin(Owner.pos+(0,0,57), TRUE);
				
			if (Owner is 'BigEye')
			{
					if (FlameAdjusted != true)
					{
						// Giant eye ball needs a bigger flame
						Scale.X = 0.35;
						Scale.Y = Scale.X;
						FlameAdjusted = true;
					}
					
				SetOrigin(Owner.pos+(0,0,24), TRUE);
			}
			
			if (Owner is 'HelloKitty')
			{
				if (FlameAdjusted != true)
				{
					Scale.X = 0.25;
					Scale.Y = Scale.X;
					FlameAdjusted = true;
				}
				
				SetOrigin(Owner.pos+(0,0,52), TRUE);
			}
			
			if (Owner is 'Mario')
			{
				
				if (FlameAdjusted != true)
				{
					Scale.X = 0.20;
					Scale.Y = Scale.X;
					FlameAdjusted = true;
				}
				SetOrigin(Owner.pos+(0,0,55), TRUE);
			}
			
			if (Owner.bKILLED)
				Destroy();
		}
	
	}
	
	Default
	{
		Health 666;
		Radius 15;
		Height 10;
		Speed 0;
		PainChance 256;
		//Monster;
		-SOLID
		-SHOOTABLE
		+FLOAT
		+NOGRAVITY
		DropItem "None";
		Scale 0.15;
		RenderStyle "Translucent";
		Alpha 0.88;
	}
	States
	{
		Spawn:
			SIXZ ABCD 3;
			Loop;
		See:
			TNT1 A 1 A_Look;
			Goto Spawn;
		Pain:
			Stop;
		Death:
			Stop;
		Melee:
			Stop;
		Missile:
			Stop;
	}
}

class Smileapocal : Weapon
{
	double BeforeAddMana;
	override void Tick()
	{
		Super.Tick();
		if (!owner) return;
		
		BeforeAddMana += 0.1;
		if (BeforeAddMana >= 1.5)
		{
			owner.A_GiveInventory("EmoleyMana",1);
			BeforeAddMana = 0;
		}
	
	}
	Default
	{
		Weapon.Kickback 100;
		Decal "bulletchip";
		Weapon.SelectionOrder 1900;
		Weapon.AmmoUse 1;
		Weapon.AmmoGive 20;
		Weapon.AmmoType "EmoleyMana";
		Obituary "$OB_MPPISTOL";
		+WEAPON.WIMPY_WEAPON;
		Tag "$TAG_PISTOL";
		Inventory.PickupMessage "Ya got the..Pistol?";
		Weapon.BobRangeX 0.2;
		Weapon.BobRangeY -0.8;
		Weapon.BobSpeed 1.4;
		Weapon.BobStyle "InverseSmooth";
	}
	States
	{
	Ready:
		EMO1 A 1 A_WeaponReady;
		Loop;
	Deselect:
		EMO1 A 1 { A_StartSound("emoley/smileapocal1", CHAN_BODY); A_Lower(); }
		Loop;
	Select:
		EMO1 A 1 A_Raise;
		Loop;
	Fire:
		EMO1 D 3 Offset(150,50)
		{
			SetPlayerProperty(0,1,PROP_FROZEN);
		}
		Goto FireLoop;
	FireLoop:
		EMO1 D 1 Offset(145,55)
		{
			SetPlayerProperty(0,1,PROP_FROZEN);
			
			FLineTraceData lineData;
			LineTrace(angle,1000,pitch, offsetz: height-25, data: LineData);
			VectorBeam.SpawnVectorBeam(Self.pos + (0,0,height-20), LineData.HitLocation, 2.0, "00a2e8", 2);
			if (!(player.cmd.buttons & BT_ATTACK))
			{
				VectorBeam.SpawnVectorBeam(Self.pos + (0,0,height-20), LineData.HitLocation, 2.0, "ffffff", 2);
				if (LineData.HitType == TRACE_HitActor)
				{
					if (LineData.HitActor && !LineData.HitActor.bKILLED && !LineData.HitActor.bFRIENDLY && LineData.HitActor.bISMONSTER)
					{
						if (CountInv("EmoleyMana") < LineData.HitActor.Health)
						{
							Console.Printf("Enemy has too much health to convert!!");
							A_StartSound("emoley/nomana", CHAN_WEAPON);
							SetPlayerProperty(0,0,PROP_FROZEN);
							return resolveState("Ready");
						}
						
						LineData.HitActor.bFRIENDLY = true;
						//Console.Printf("Got an actor called %s", LineData.HitActor.GetClassName());
						LineData.HitActor.A_StartSound("emoley/convertedunit", CHAN_BODY);
						A_StartSound("emoley/convertedunit", CHAN_WEAPON);
						
						actor flame = spawn("EmoleyFlame", LineData.HitActor.pos);
						if (flame)
						{
							let a = EmoleyFlame(flame);
							if (a)
							{
								a.owner = LineData.HitActor;
							}
						}
						
						self.A_TakeInventory("EmoleyMana",LineData.HitActor.Health);
					}
				}
				SetPlayerProperty(0,0,PROP_FROZEN);
				return ResolveState ("Ready");
			}
				
			return ResolveState (null);
			
		}
		Loop;
	Flash:
		TNT1 A 0 Bright A_Light2;
		TNT1 A 1 Bright A_Light1;
		Goto LightDone;
	Spawn:
		PIST A -1;
		Stop;
	}
}

class EmoleyShotgun : Weapon
{
	Default
	{
    	Weapon.Kickback 100;
    	Weapon.SelectionOrder 1300;
	Weapon.AmmoUse 4;
	Weapon.AmmoGive 16;
	Weapon.AmmoType "Shell";
	Obituary "$OB_MPSHOTGUN";
    	Tag "$TAG_SHOTGUN";
	Inventory.PickupMessage "$GOTSHOTGUN";
	Weapon.BobRangeX -0.98;
	Weapon.BobRangeY 0.4;
	Weapon.BobSpeed 1.6;
	Weapon.BobStyle "InverseSmooth";
	}
	States
	{
	Ready:
		EMO2 A 1 Offset(0,0) A_WeaponReady;
		Loop;
	Deselect:
		EMO2 A 1 Offset(0,0) A_Lower;
		Loop;
	Select:
		EMO2 A 1 Offset(0,0) A_Raise;
		Loop;
	Fire:
                EMO2 A 1;
		EMO2 A 3;
		EMO2 A 5 A_FireShotgun;
		EMO2 B 2 Offset(-12, 19);
		EMO2 B 2 Offset(-23, 12);
		EMO2 B 2 Offset(-46, 4);
		EMO2 B 2 Offset(-69, -5);
		EMO2 C 2 Offset(-69, -5);
		EMO2 C 3 Offset(-80, -2);
		EMO2 C 3 Offset(-94, 31);
		EMO2 C 2 Offset(-83, 3);
		EMO2 C 3 Offset(-69, -15);
		EMO2 C 2 Offset(-53, -44);
		EMO2 C 3 Offset(-69, -11);
		EMO2 C 2 Offset(-84, 9);
		EMO2 B 2 Offset(-108, 1);
		EMO2 B 3 Offset(-91, 10);
		EMO2 B 2 Offset(-69, 19);
		EMO2 B 2 Offset(-43, 25);
		EMO2 B 2 Offset(-25, 31);
		EMO2 A 7 A_ReFire;
		Goto Ready;
	Flash:
		SHTF B 3 Offset(0, 0) Bright A_Light2;
		SHTF A 2 Offset(0, 0) Bright A_Light1;
		Goto LightDone;
	Spawn:
		SHOT A -1;
		Stop;
	}
}	
