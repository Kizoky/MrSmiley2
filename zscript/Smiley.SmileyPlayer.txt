class SmileyPlayer : PlayerPawn 
{
	string JumpSphereSavedLevel;
	statelabel wepstate;
	actor MyFollower;
	
	bool Flying, initFallAnim, reverse, stats;
	double TimeBeforeFallAnim, oldy;
	
	double bottom;
	
	double animvalue, highestheight;
	override void Tick()
	{
		Super.Tick();
		if ( !player || (player.mo != self) ) return;
		
		if (pos.z > floorz)
		{
			Flying = true;
			if (pos.z > highestheight)
				highestheight = pos.z;
		}
		else if (pos.z ~== floorz)
		{
			if (Flying)
			{
				Flying = false;
				initFallAnim = true;
			}
		}
		
		
		if (initFallAnim && !Flying)
		{
			let psp = player.GetPSPrite(PSP_WEAPON);
			
			if (!stats)
			{
				oldy = psp.y;
				bottom = psp.y;
				stats = true;			
			}
			
			int oldx = psp.x;
			//Console.Printf("Highestheight: %f", highestheight);
			if (!reverse)
			{	
				animvalue += highestheight / 25.;
				psp.y = oldy + animvalue;
				if (animvalue > highestheight / 10.)
				{
					//Console.Printf("animvalue: %f > %f highestheight",animvalue, highestheight);
					//Console.Printf("oldy: %d", oldy);
					reverse = true;
					
				}
			}
			else
			{
				oldy -= 1;
				A_WeaponOffset(oldx, oldy, WOF_INTERPOLATE);
				Console.Printf("%f | %d", bottom, oldy);
				
				if (bottom-5 > oldy)
				{
					Console.Printf("done");
					initFallAnim = false;
					reverse = false;
					animvalue = 0;
					psp.y = oldy;
					highestheight = 0;
					oldy = 0;
					bottom = 0;
					stats = false;
				}
			}
			
		}
		
		if (!(level.mapname ~== JumpSphereSavedLevel))
			self.JumpZ = Default.JumpZ;
	}
	
	override void PostBeginPlay()
	{
		Super.PostBeginPlay();
	}

	Default
	{
		Speed 1;
		Health 100;
		Radius 16;
		Height 56;
		Mass 100;
		PainChance 255;
	}
	States
	{
	Spawn:
		PLAY A -1;
		Loop;
	See:
		PLAY ABCD 4;
		Loop;
	Missile:
		PLAY E 12;
		Goto Spawn;
	Melee:
		PLAY F 6 BRIGHT;
		Goto Missile;
	Pain:
		PLAY G 4;
		PLAY G 4 A_Pain;
		Goto Spawn;
	Death:
		PLAY H 0 A_PlayerSkinCheck("AltSkinDeath");
	Death1:
		PLAY H 10;
		PLAY I 10 A_PlayerScream;
		PLAY J 10 A_NoBlocking;
		PLAY KLM 10;
		PLAY N -1;
		Stop;
	XDeath:
		PLAY O 0 A_PlayerSkinCheck("AltSkinXDeath");
	XDeath1:
		PLAY O 5;
		PLAY P 5 A_XScream;
		PLAY Q 5 A_NoBlocking;
		PLAY RSTUV 5;
		PLAY W -1;
		Stop;
	AltSkinDeath:
		PLAY H 6;
		PLAY I 6 A_PlayerScream;
		PLAY JK 6;
		PLAY L 6 A_NoBlocking;
		PLAY MNO 6;
		PLAY P -1;
		Stop;
	AltSkinXDeath:
		PLAY Q 5 A_PlayerScream;
		PLAY R 0 A_NoBlocking;
		PLAY R 5 A_SkullPop;
		PLAY STUVWX 5;
		PLAY Y -1;
		Stop;
	}
}
